angular.module('App',['ngRoute','ngResource','ngAnimate','ngCookies','ui.router'])
.config(['$routeProvider','$stateProvider', '$urlRouterProvider',function($routeProvider,$stateProvider, $urlRouterProvider){



  $stateProvider
  .state('home',{
    url:'/',
    templateUrl:'../templates/home.html',
    controller: 'HomeCtrl'
  })
  .state('login',{
    url:'/login',
    templateUrl: '../templates/login.html',
    controller: 'LoginCtrl'
  })
  .state('register',{
    url: '/register',
    templateUrl: '../templates/register.html',
    controller:'RegisterCtrl'
  })
  ;


  $urlRouterProvider.otherwise('/');

}]);

angular.module('App')
.controller('HomeCtrl',['$scope','$location','UserFactory','ImageDataFactory',function($scope,$location,UserFactory,ImageDataFactory){
  console.log("Home Controller Loaded");


 var x = 0;
 var y = 0;
 var isInsidePic = false;

 var cursorX = 0;
 $(document).mousemove(function(e){
   console.log(e);
   cursorX = e.pageX + e.offsetX;
 });
var lastMouseMoved = "";
$('#releasable-image').mouseleave(function(e){
  isInsidePic = false;
  $('#image-tooltip').popover('hide');
});


$('#releasable-image').mousemove(function(e){
  //console.log(e.offsetX + ", " + e.offsetY);
  isInsidePic = true;
  lastMouseMoved = new Date().getTime();
  x = Math.round(e.pageX - $(this).offset().left);
  y = Math.round(e.pageY - $(this).offset().top);

  var element = $(this);

  setTimeout(function(){
    var currentTime = new Date().getTime();
    //console.log(currentTime - lastMouseMoved);

    if(currentTime - lastMouseMoved >= 999 && isInsidePic){
      console.log(x + ", " + y);
      ImageDataFactory.getPixelInfo(x,y,function(err,result){
        //console.log(result);
        if(!result || !result.success || !result.pixelInfo || !result.pixelInfo.isBought){
          //console.error('No result');
            $('#image-tooltip').popover('hide');
            return;
        }
        //console.log(result);

        var firstname = result.pixelInfo.buyer.firstname;
        var message = result.pixelInfo.message;

        console.log(element.context.offsetLeft);

        $('#image-tooltip')
        .attr('data-original-title', firstname + " said:")
        .attr('data-content', message)
        .css({"position":"absolute","top":e.pageY - 25 + "px","left":   cursorX   +"px"})
        .popover('show');

        $('[data-toggle="popover"]').attr('title',message + " -"+firstname);

      });

    } else {

    }
  },1000);
});





  $scope.isLoggedIn = UserFactory.isLoggedIn;
  $scope.userName = UserFactory.me.firstname ? UserFactory.me.firstname : "";
  $scope.percentage = -1;
  ImageDataFactory.getPixelPercentage(function(percent){
    $scope.percentage = Number(percent).toFixed(2);
  });

  $scope.logout = function(){
    UserFactory.logout(function(err){
      if(err){
        return console.error(err);
      }

      $scope.isLoggedIn = UserFactory.isLoggedIn;
      //$scope.showBuy();
      $('#buy-slider').slideUp("fast");
    });
  };

  UserFactory.makeMeRequest(function(err){
    if(err){
      return console.error(err);
    }

    $scope.userName = UserFactory.me.firstname ? UserFactory.me.firstname : "";
    $scope.isLoggedIn = UserFactory.isLoggedIn;

  });


  $(document).ready(function(){
      $('#about-slider').slideUp("fast");
      $('#buy-slider').slideUp("fast");
  });


  var aboutShown = false;
  var buyShown = false;

  $scope.showAbout = function(){
    console.log('showing about!');
    aboutShown = !aboutShown;

    if(aboutShown){
      if(buyShown){
        $('#buy-slider').slideUp('fast',function(){
          buyShown = false;
          $('#about-slider').slideDown('slow');
        });
      } else {
        $('#about-slider').slideDown('slow');
      }
    } else {
      $('#about-slider').slideUp('slow');
    }

  };

  $scope.showBuy = function(){

    if(!UserFactory.isLoggedIn){
      $location.path('/login');
      return;
    }

    buyShown = !buyShown;

    if(buyShown){
      if(aboutShown){
        $('#about-slider').slideUp('fast',function(){
          aboutShown = false;
          $('#buy-slider').slideDown('slow');
        });
      } else {
        $('#buy-slider').slideDown('slow');
      }
    } else {
        $('#buy-slider').slideUp('slow');
    }

  };

}]);

angular.module('App')
.controller('LoginCtrl',['$scope','$state','UserFactory',function($scope,$state,UserFactory){
  console.log("Login Controller Added");
  // if ($location.protocol() !== 'https') {
  //   console.log('You are NOT going over https when you should!');
  //   // $window.location.href = $location.absUrl().replace('http', 'https');
  //   $window.location.href = 'https://localhost:3000/#/login'
  // }

  $scope.email = "";
  $scope.password = "";
  $scope.errorMessage = "";

  $scope.login = function(){

    $scope.errorMessage = "";

    //TODO finish this login method
    UserFactory.login($scope.email,$scope.password,function(err){
      if(err){
        $scope.errorMessage = err;
        console.error(err);
        return;
      }

      $state.go('home');

    });
  };




}]);

angular.module('App')
.controller('RegisterCtrl',['$scope','$state','UserFactory',function($scope,$state,UserFactory){
  console.log("Register Controller Added");

  $scope.errorMessage = "";
  $scope.user = {
    firstname:"",
    lastname:"",
    email:"",
    password:"",
    confirmPassword:""
  };

  $('#register-success-modal').on('hidden.bs.modal',function(){
    console.log("modal is hidden!");
    $state.go('home');
  });

  $scope.doRegister = function(){
    console.log("Signing up!");
    $scope.errorMessage = "";
    if(

      $scope.user.firstname.length === 0 ||
      $scope.user.lastname.length === 0 ||
      $scope.user.email.length === 0 ||
      $scope.user.password.length === 0 ||
      $scope.user.confirmPassword.length === 0)
      {
          $scope.errorMessage = "Ensure every field is filled out!";
          return;
      }

    if($scope.user.password !== $scope.user.confirmPassword){
      console.error('passwords dont match!');
      $scope.errorMessage = "Your passwords do not match! Please try again."
      return;
    }

    //done with form checks

    UserFactory.register($scope.user,function(err,result){
      if(err){
        console.log(err);
        $scope.errorMessage = err.error;
        return;
      }

      console.log(result);
      UserFactory.login($scope.user.email,$scope.user.password,function(err){
        if(err){
          console.error("I just registered you, and I couldn't log you in!");
          console.log(err);
        }
      });
      $('#register-success-modal').modal('show');
    });
  };
}]);

angular.module('App')
.directive('aboutSlide',[function(){
  return {
    templateUrl: '../../templates/about.html',
    restrict: 'E'
  };
}]);

angular.module('App')
.directive('buySlide',[function(){
  return {
    templateUrl: '../../templates/buy.html',
    restrict: 'E',
    controller: 'BuyCtrl'
  };
}]);

angular.module('App')
.factory('ImageDataFactory',['$http',function($http){



  var self = {

    getPixelPercentage: function(callbacks){
      $http.get('/api/pixels/percentage')
      .then(function(result){

        callbacks(result.data.percentage);

      }, function(err){


      });


    },

    getPixelInfo: function(x,y,callbacks){
      $http.get('/api/pixels',{
        params:{
          'x':x,
          'y':y
        }
      })
      .then(function(result){
      //  console.log(JSON.stringify(result.data));
        callbacks(null,result.data);
        //console.log(result);
        //callbacks(null,result.data);
      }, function(err){
        console.error(err);
        callbacks(err);
      });
    }

  };








  // var self = {
  //   pixelInfo:null, //Array of our pixel meta-data
  //   initialize: function(){
  //     if(self.pixelInfo !== null){
  //       return;
  //     }
  //
  //     console.log('About to get pixel metadata');
  //     self.pixelInfo = [];
  //     $http.get('/api/pixels')
  //     .then(function(result){
  //       console.log(result);
  //       var map = {};
  //
  //       result.forEach(function(entry){
  //
  //         if(!map[Number(entry.pixel.x)])
  //           map[Number(entry.pixel.x)] = {};
  //
  //         map[Number(entry.pixel.x)][Number(entry.pixel.y)] = entry;
  //
  //
  //       });
  //
  //       self.pixelInfo = map;
  //
  //     },function(err){
  //       console.error(err);
  //     })
  //     ;
  //   },
  //   getMetaData: function(x,y){
  //     //console.log(x + ", "+y)
  //     if(!self.pixelInfo[x] || !self.pixelInfo[x][y]){
  //       return undefined;
  //     }
  //     //console.log(self.pixelInfo);
  //     return self.pixelInfo[Number(x)][Number(y)];
  //   }
  //
  // };

  return self;

}]);

angular.module('App')
.factory('PaypalFactory',['$http','UserFactory',function($http,UserFactory){
  return {
    buy: function(card,amount,message,callbacks){
      var user = UserFactory.me;

      //TODO
      //ensure the user object is not null or empty object!
      console.log(user);
      $http.post('/api/user/'+user._id+'/buy',
      {card:card,amount:amount,message:message},
      {headers:{'Content-Type':'application/json'}}
      )
      .then(function(result){
        console.log(result.data);
      },function(err){
        console.error(err.data);
      });
    }
  };
}]);

angular.module('App')
.factory('UserFactory',['$http',function($http){

console.log('Initializing User Factory!');

  var user = {
    me: {},
    isLoggedIn: false,
    login: function(email,password,callbacks){
      var self = this;
      $http({
          method: 'POST',
          url: "/api/login",
          headers: {'Content-Type': 'application/x-www-form-urlencoded'},
          transformRequest: function(obj) {
              var str = [];
              for(var p in obj)
              str.push(encodeURIComponent(p) + "=" + encodeURIComponent(obj[p]));
              return str.join("&");
          },
          data: {email:email, password: password}
      })
      .success(function(result){
        console.log("SUCCESS")
        console.log(result);

        if(!result.isLoggedIn){
          return callbacks("Invalid email and password combo.");
        }

        self.makeMeRequest(callbacks);


      })
      .error(function(result){
        console.log("ERROR");
        console.log(result);
      });
    },
    logout: function(callbacks){
      var self = this;
      $http.get('/api/logout')
      .success(function(response){
        self.isLoggedIn = response.isLoggedIn;
        console.log(response);
        callbacks(null);
      })
      .error(function(response){
        callbacks(response);
      })
    },
    makeMeRequest: function(callbacks){
      var self = this;
      $http.get('/api/me')
      .success(function(result){

        if(result.error){
          console.log(result.error);
          callbacks(result.error);
        } else {
          self.me = result.me;
          self.isLoggedIn = true;
          console.log('Just made me request and u are logged in');
          callbacks(null);
        }
      })
      .error(function(result){
        console.log(result);
        callbacks(result);
      });
    },
    register: function(potentialUser,callbacks){

      $http.post('/api/user',{user:potentialUser},{headers:{'Content-Type':'application/json'}})
      .then(function(result){
        console.log(result);
        callbacks(null,result);

    },function(err){
      console.error(err);
      callbacks(err.data);
    });

    }
  };

  return user;
}]);

angular.module('App')
.controller('BuyCtrl',['$scope','$http','PaypalFactory',function($scope,$http,PaypalFactory){
  console.log('Buy Controller Loaded');
  $scope.card = {
    name:'',
    number:'',
    month:'',
    year:'',
    cvv: ''
  };

  $scope.message = '';
  $scope.amount = 10;
  $scope.buy = function(){
    PaypalFactory.buy($scope.card,$scope.amount,$scope.message,function(){
      console.log('Done purchasing!');
    });
  };

  // $scope.$watch('amount',function(newVal,oldVal){
  //   ImageDataFactory.getAvailablePixelCount(function(amount){
  //     console.log('YOUR AMOUNT: '+amount);
  //     if(newVal > amount){
  //       $scope.amount = 123123;
  //     }
  //   });
  // });

}]);
